/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Server.ServerMessages;

import Server.MasterComputerServer;
import Server.ServerConnectionThread;
import data.ComputerPC;
import data.Configuration;
import data.Setting;
import database.SQLiteJDBC;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class MultiCastServerMessage extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form MultiCastServerMessage
     */

    public MultiCastServerMessage() {
        initComponents();
        PublishClientPC();
        MultiCastIconLabel.setIcon(Configuration.getImageIcon("multicast_ic.png"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MultiCastIconLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        MultiCastIPComboBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        MultiCastMessageTextArea = new javax.swing.JTextArea();
        SendMultiCastButton = new javax.swing.JButton();
        CancelSendMultiCastButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        AllComputerPCTargetList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(426, 415));
        setMinimumSize(new java.awt.Dimension(426, 415));

        MultiCastIconLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MultiCastIconLabel.setMaximumSize(new java.awt.Dimension(40, 40));
        MultiCastIconLabel.setMinimumSize(new java.awt.Dimension(40, 40));
        MultiCastIconLabel.setPreferredSize(new java.awt.Dimension(40, 40));

        jLabel2.setText("Send Multi Cast Message");

        jLabel3.setText("Multi Cast IP");

        jLabel4.setText("Message");

        MultiCastMessageTextArea.setColumns(20);
        MultiCastMessageTextArea.setRows(5);
        jScrollPane1.setViewportView(MultiCastMessageTextArea);

        SendMultiCastButton.setText("Send");
        SendMultiCastButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendMultiCastButtonActionPerformed(evt);
            }
        });

        CancelSendMultiCastButton.setText("Cancel");
        CancelSendMultiCastButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelSendMultiCastButtonActionPerformed(evt);
            }
        });

        AllComputerPCTargetList.setMaximumSize(new java.awt.Dimension(245, 160));
        AllComputerPCTargetList.setMinimumSize(new java.awt.Dimension(245, 160));
        AllComputerPCTargetList.setPreferredSize(new java.awt.Dimension(245, 160));
        jScrollPane2.setViewportView(AllComputerPCTargetList);

        jLabel1.setText("Target Clients");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(MultiCastIconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(MultiCastIPComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(244, 244, 244)
                                .addComponent(CancelSendMultiCastButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SendMultiCastButton))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addGap(42, 42, 42)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MultiCastIconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel2)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel3))
                    .addComponent(MultiCastIPComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel4))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SendMultiCastButton)
                    .addComponent(CancelSendMultiCastButton))
                .addGap(38, 38, 38))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SendMultiCastButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendMultiCastButtonActionPerformed
        String msg = MultiCastMessageTextArea.getText();

        ArrayList<String> selected = new ArrayList<>(AllComputerPCTargetList.getSelectedValuesList());
        int[] targetClient = getTargetClients(selected);
        if (selected.size() > 0) {
            if (!msg.equals("")) {
                try {
                    MasterComputerServer.serverSocket.sendDataToTargets(Setting.MULTICAST_MESSAGE_TYPE+"#"+msg, targetClient);
                    System.out.println("The server Sent MultiCast data");
                    MultiCastMessageTextArea.setText("");
                    this.dispose();
                }
                 catch (Exception ex) {
                    Logger.getLogger(MultiCastServerMessage.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                System.out.println("The field should contain data");
            }
        } else {
            JOptionPane.showMessageDialog(this, "You should select computer from list", "Error no targets selected", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_SendMultiCastButtonActionPerformed

    private void CancelSendMultiCastButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelSendMultiCastButtonActionPerformed
        dispose();
    }//GEN-LAST:event_CancelSendMultiCastButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> AllComputerPCTargetList;
    private javax.swing.JButton CancelSendMultiCastButton;
    private javax.swing.JComboBox<String> MultiCastIPComboBox;
    private javax.swing.JLabel MultiCastIconLabel;
    private javax.swing.JTextArea MultiCastMessageTextArea;
    private javax.swing.JButton SendMultiCastButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setVisible(true);
        setLocationRelativeTo(null);
        show();
    }

    private void PublishClientPC() {
        SQLiteJDBC db;
        ArrayList<ComputerPC> pc;
        db = new SQLiteJDBC();
        pc = db.getAllNetworkPC();
        ArrayList<String> client = new ArrayList<>();
        ArrayList<Server.ServerConnectionThread> clients = Server.Server.getAllClients();
        int counter = 1;
        for (ServerConnectionThread client1 : clients) {
            client.add("Computer-" + counter++);
        }

        MultiCastIPComboBox.setModel(new DefaultComboBoxModel<String>(client.toArray(new String[0])));
        AllComputerPCTargetList.setModel(new DefaultComboBoxModel<String>(client.toArray(new String[0])));
    }

    private int[] getTargetClients(ArrayList<String> selected) {
        int[] data = new int[selected.size()];
        int index = 0;
        for (String client : selected) {
            String[] d = client.split("-");
            System.out.println(" Client number  [ " + d[1] + " ] ");
            data[index] = Integer.parseInt(d[1]);
            index++;
        }
        return data;
    }
}
