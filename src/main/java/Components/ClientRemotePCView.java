/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Components;

import Server.MasterComputerServer;
import Server.ServerMessages.UnicastServerMessage;
import data.Configuration;
import data.Setting;
import java.awt.BorderLayout;
import java.awt.Dimension;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

/**
 *
 * @author root
 */
public class ClientRemotePCView extends javax.swing.JPanel {

    /**
     * Creates new form ClientComputerPCViewPanel
     */
    static int index = 0;
    private int remotePCIndex;

    public ClientRemotePCView() {
        initComponents();
        remotePCIndex = ++index;
        //this.RemoteDesktopViewPanel.setLayout(new BorderLayout());
        OpenRemoteDesktopButton.setIcon(Configuration.getImageIcon("green_right_ic.png"));
        setVisible(true);
        show();
        SwingUtilities.updateComponentTreeUI(this);
        //SwingUtilities.updateComponentTreeUI(this);
    }

    public int getRemotePCIndex() {
        return remotePCIndex;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        OpenRemoteDesktopButton = new javax.swing.JButton();
        ClientComputerMessageButton = new javax.swing.JButton();
        RemoteDisplayPanel = new javax.swing.JPanel();

        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 153, 0), new java.awt.Color(153, 153, 0), new java.awt.Color(153, 153, 0), new java.awt.Color(153, 153, 0)));
        setMaximumSize(new java.awt.Dimension(300, 224));
        setMinimumSize(new java.awt.Dimension(300, 224));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        OpenRemoteDesktopButton.setText("Open");
        OpenRemoteDesktopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenRemoteDesktopButtonActionPerformed(evt);
            }
        });
        add(OpenRemoteDesktopButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(213, 184, -1, -1));

        ClientComputerMessageButton.setText("Message");
        ClientComputerMessageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClientComputerMessageButtonActionPerformed(evt);
            }
        });
        add(ClientComputerMessageButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 184, -1, -1));

        RemoteDisplayPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.blue, java.awt.Color.red, java.awt.Color.blue, java.awt.Color.red));
        RemoteDisplayPanel.setMaximumSize(new java.awt.Dimension(270, 175));
        RemoteDisplayPanel.setMinimumSize(new java.awt.Dimension(270, 175));
        RemoteDisplayPanel.setPreferredSize(new java.awt.Dimension(270, 175));
        RemoteDisplayPanel.setLayout(new java.awt.BorderLayout());
        add(RemoteDisplayPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 3, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void OpenRemoteDesktopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenRemoteDesktopButtonActionPerformed
        OpenMaximizedRemoteView();
    }//GEN-LAST:event_OpenRemoteDesktopButtonActionPerformed

    private void ClientComputerMessageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClientComputerMessageButtonActionPerformed
        //send message mean sending a unicast message
        System.out.println("The Message type is unicast   .... ");
        UnicastServerMessage uniCastServer = new UnicastServerMessage();
        Thread t1 = new Thread(uniCastServer);
        MasterComputerServer.serverSocket.sendData(Setting.MESSAGE_UNICAST_MESSAGE,0);
        System.out.println("The Message Type is Unicast Message ");
        t1.start();
    }//GEN-LAST:event_ClientComputerMessageButtonActionPerformed

    public void setVisibilityClientComputerMessageButton(boolean visibility) {
        this.ClientComputerMessageButton.setVisible(visibility);
    }

    public void enableOpenRemoteDesktopButton(JButton OpenRemoteDesktopButton) {
        this.OpenRemoteDesktopButton = OpenRemoteDesktopButton;
    }

    public JPanel getRemoteDisplayPanel() {
        return RemoteDisplayPanel;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClientComputerMessageButton;
    private javax.swing.JButton OpenRemoteDesktopButton;
    private javax.swing.JPanel RemoteDisplayPanel;
    // End of variables declaration//GEN-END:variables

    private void OpenMaximizedRemoteView() {
        Thread t = new Thread(new Runnable() {
            @Override
            public void run() {
                JFrame frame = new JFrame("Computer Remote View");
                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                frame.setSize(800, 800);
                frame.setResizable(true);
                frame.setLocationRelativeTo(null);
                frame.setVisible(true);
                frame.setLayout(new BorderLayout());
                Dimension d=RemoteDisplayPanel.getSize();
                //JPanel p = RemoteDisplayPanel;
                RemoteDisplayPanel.setSize(800, 800);
                frame.add(RemoteDisplayPanel, BorderLayout.CENTER);
                frame.show();
                frame.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent evt) {
                        RemoteDisplayPanel.setSize(d);
                        add(RemoteDisplayPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 3, -1, -1));
                    }
                });
            }
        });
        t.start();
        
    }
}
