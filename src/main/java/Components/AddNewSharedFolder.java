/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Components;

import data.ComputerPC;
import data.SharedFolders;
import database.SQLiteJDBC;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author root
 */
public class AddNewSharedFolder extends javax.swing.JFrame implements Runnable{

    /**
     * Creates new form AddNewSharedFolder
     */
    public AddNewSharedFolder() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        FolderNameTextField = new javax.swing.JTextField();
        FolderPathTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        DescriptionTextField = new javax.swing.JTextField();
        AddFolderButton = new javax.swing.JButton();
        CancelAddFolderButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Adding New Shared Folder");

        jLabel2.setText("Folder Name");

        jLabel3.setText("Folder Path");

        FolderPathTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FolderPathTextFieldMouseClicked(evt);
            }
        });
        FolderPathTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FolderPathTextFieldActionPerformed(evt);
            }
        });

        jLabel4.setText("Description");

        AddFolderButton.setText("Add Folder");
        AddFolderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddFolderButtonActionPerformed(evt);
            }
        });

        CancelAddFolderButton.setText("Cancel");
        CancelAddFolderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelAddFolderButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(FolderNameTextField))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(jLabel1)
                        .addGap(0, 168, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FolderPathTextField)
                            .addComponent(DescriptionTextField)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(CancelAddFolderButton)
                        .addGap(18, 18, 18)
                        .addComponent(AddFolderButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(FolderNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(FolderPathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(DescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddFolderButton)
                    .addComponent(CancelAddFolderButton))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddFolderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddFolderButtonActionPerformed
        // TODO add your handling code here:
        if (fieldIsNotEmpty()) {
            SQLiteJDBC db = new SQLiteJDBC();
            SharedFolders folder = new SharedFolders(FolderNameTextField.getText().toString(),
                    FolderPathTextField.getText().toString(),
                    DescriptionTextField.getText().toString());

            if (db.addSharedFolder(folder)) {
                JOptionPane.showMessageDialog(this, "The Shared Folder is added ", "Success", JOptionPane.INFORMATION_MESSAGE);
                ClearFields();
            } else {
                JOptionPane.showMessageDialog(this, "The Shared Folder is not added ", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "The Field should be filled with data  ", "Empty Fields", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_AddFolderButtonActionPerformed

    private void CancelAddFolderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelAddFolderButtonActionPerformed
        dispose();
    }//GEN-LAST:event_CancelAddFolderButtonActionPerformed

    private void FolderPathTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FolderPathTextFieldActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_FolderPathTextFieldActionPerformed

    private void FolderPathTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FolderPathTextFieldMouseClicked
        // TODO add your handling code here:
        selectTargetFolder();
    }//GEN-LAST:event_FolderPathTextFieldMouseClicked
    private void selectTargetFolder() {
        String getProperty = System.getProperty("user.home");
        File defaultDir = new File(getProperty + "/Downloads/");
        JFileChooser chooser = new JFileChooser(defaultDir);
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setDialogTitle("Select Target Download folder : ");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        //
        // disable the "All files" option.
        //
        chooser.setAcceptAllFileFilterUsed(false);
        //    
        if (chooser.showOpenDialog(this) == JFileChooser.OPEN_DIALOG) {
            System.out.println("getCurrentDirectory(): "
                    + chooser.getCurrentDirectory());
            System.out.println("getSelectedFile() : "
                    + chooser.getSelectedFile());
            FolderPathTextField.setText(chooser.getSelectedFile().toString());
        } else {
            System.out.println("No Selection ");
            //FolderPathTextField
        }

    }

    private boolean fieldIsNotEmpty() {
        return (!FolderNameTextField.getText().equals("") && !FolderPathTextField.getText().equals("")
                && !DescriptionTextField.getText().equals(""));
    }

    private void ClearFields() {
        FolderNameTextField.setText("");
        FolderPathTextField.setText("");
        DescriptionTextField.setText("");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddFolderButton;
    private javax.swing.JButton CancelAddFolderButton;
    private javax.swing.JTextField DescriptionTextField;
    private javax.swing.JTextField FolderNameTextField;
    private javax.swing.JTextField FolderPathTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        setVisible(true);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        show();
    }

}
