/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Client;

import Client.Remote.ClientInitiator;
import data.Configuration;
import data.Setting;
import data.TCPFileClient;
import java.awt.event.WindowEvent;
import java.sql.Time;
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
import javax.swing.JFrame;

/**
 *
 * @author root
 */
public class ClientPC extends javax.swing.JFrame {

    /**
     * Creates new form ClientPC
     */
    private static ClientInitiator remoteClient;
    private ClientInitiator clientRemoteView;
    private long currentTime;
    private TCPFileClient clientSharing;
    public static void openRemoteClient() {
        remoteClient = new ClientInitiator();
        remoteClient.start();
    }
    private ClientMainAppSocket mainClientSocket;

    public ClientPC() {        
        //call the function that initialize the window components
        initComponents();
        setVisible(true);
        show();
        currentTime=System.currentTimeMillis();
        jLabel4.setIcon(Configuration.getImageIcon("network_manager_ic.png"));        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        EndSessionButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        StartTimeTextField = new javax.swing.JTextField();
        ElapsedTimeTextField = new javax.swing.JTextField();
        ReminderTimeTextField = new javax.swing.JTextField();
        CloseButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        SharedFoldersButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(550, 300));
        setMinimumSize(new java.awt.Dimension(550, 300));
        setPreferredSize(new java.awt.Dimension(550, 300));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        EndSessionButton.setText("End Session");
        EndSessionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EndSessionButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Start Time");

        jLabel2.setText("Elapsed Time");

        jLabel3.setText("Reminder Time");

        StartTimeTextField.setEditable(false);
        StartTimeTextField.setBackground(new java.awt.Color(255, 255, 255));

        ElapsedTimeTextField.setEditable(false);
        ElapsedTimeTextField.setBackground(new java.awt.Color(255, 255, 255));

        ReminderTimeTextField.setEditable(false);
        ReminderTimeTextField.setBackground(new java.awt.Color(255, 255, 255));

        CloseButton.setText("Close");
        CloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseButtonActionPerformed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setMaximumSize(new java.awt.Dimension(50, 50));
        jLabel4.setMinimumSize(new java.awt.Dimension(50, 50));
        jLabel4.setPreferredSize(new java.awt.Dimension(50, 50));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Network Manager Application");

        SharedFoldersButton.setText("Shared Folder");
        SharedFoldersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SharedFoldersButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 125, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(StartTimeTextField)
                            .addComponent(ElapsedTimeTextField)
                            .addComponent(ReminderTimeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(EndSessionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CloseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SharedFoldersButton))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel5)))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(StartTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SharedFoldersButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ElapsedTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EndSessionButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ReminderTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CloseButton))
                .addContainerGap(75, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EndSessionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EndSessionButtonActionPerformed
        mainClientSocket.EndClient();
        mainClientSocket.stop();
        dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));

    }//GEN-LAST:event_EndSessionButtonActionPerformed

    private void CloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseButtonActionPerformed
        setVisible(false);
    }//GEN-LAST:event_CloseButtonActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        mainClientSocket = new ClientMainAppSocket( "Ehab");
        mainClientSocket.start();
        StartTimeTextField.setText(new Time(System.currentTimeMillis())+"");
        ReminderTimeTextField.setText("30 M");
    }//GEN-LAST:event_formWindowOpened

    private String getTime(long startTime){
        Time start=new Time(startTime);
        int startHours=start.getHours();
        int startMinuts=start.getMinutes();
        int startSeconds=start.getSeconds();
        
        Time current=new Time(System.currentTimeMillis());
        int hours=current.getHours();
        int minuts=current.getMinutes();
        int seconds=current.getSeconds();
        
        
        return hours+":"+minuts+":"+seconds;
    }
    private void SharedFoldersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SharedFoldersButtonActionPerformed
        clientSharing=new TCPFileClient();
        Thread t=new Thread(clientSharing);
        t.start();
    }//GEN-LAST:event_SharedFoldersButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CloseButton;
    private javax.swing.JTextField ElapsedTimeTextField;
    private javax.swing.JButton EndSessionButton;
    private javax.swing.JTextField ReminderTimeTextField;
    private javax.swing.JButton SharedFoldersButton;
    private javax.swing.JTextField StartTimeTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables

    public void openRemoteView() {
        remoteClient.start();
    }
    public void closeRemoteView() {
        remoteClient.stop();
    }


}
